=============================================================================
List of generated methods in project: Controlador_AGV

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "Right_Motor" (component PWM)
   - Right_Motor_SetRatio16 -This method sets a new duty-cycle ratio. Ratio is expressed as a 16-bit unsigned integer number. 0 
                - FFFF value is proportional to ratio 0 - 100%. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.   Note: Calculated duty depends on the timer 
                possibilities and on the selected period.

Module "Left_Motor" (component PWM)
   - Left_Motor_SetRatio16 -This method sets a new duty-cycle ratio. Ratio is expressed as a 16-bit unsigned integer number. 0 
                - FFFF value is proportional to ratio 0 - 100%. The method is available only if it is not selected list of 
                predefined values in <Starting pulse width> property.   Note: Calculated duty depends on the timer 
                possibilities and on the selected period.

Module "Right_Motor_Ref" (component BitIO)
   - Right_Motor_Ref_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - Right_Motor_Ref_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "Left_Motor_Ref" (component BitIO)
   - Left_Motor_Ref_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - Left_Motor_Ref_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "Sensores"  (component ADC)
   - Sensores_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If 
                the <number of conversions> is more than one the conversion of A/D channels is performed specified number of 
                times.)
   - Sensores_GetChanValue8 -This method returns the last measured value of the required channel. Compared with <GetChanValue> 
                method this method returns more accurate result if the <number of conversions> is greater than 1 and <AD 
                resolution> is less than 8 bits. In addition, the user code dependency on <AD resolution> is eliminated.

Module "Parada"    (component BitIO)
   - Parada_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "Muestreador" (component TimerInt)
   - Muestreador_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).

Module "Actualizador_Estados" (component TimerInt)
   - Actualizador_Estados_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - Actualizador_Estados_Disable -This method disables the component - it stops the timer. No events will be generated.

Module "IRRx"      (component Capture)
   - IRRx_EnableEvent -This method enables the events. This method is available only if any event is selected.
   - IRRx_DisableEvent -This method disables the events.  This method is available only if any event is selected.
   - IRRx_Reset -This method resets the counter register (see implementation note in <General Info>).
   - IRRx_GetCaptureValue -This method gets the last value captured by enabled timer (see implementation note in <General Info>)
                . The method does not return valid value after initialization or after <Reset> until new capture event (even if 
                the returned Error code is ERR_OK).

Module "IRRx_Watchdog" (component Capture)
   - IRRx_Watchdog_Reset -This method resets the counter register (see implementation note in <General Info>).

Module "Cpu"       (component MC9S08QE128_80)
   - Cpu_EnableInt -Enables maskable interrupts
   - Cpu_DisableInt -Disables maskable interrupts

===================================================================================
